services:
  zipkin:
    container_name: zipkin
    hostname: zipkin
    restart: always
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411" # Port used for the Zipkin UI and HTTP Api
    environment:
      - STORAGE_TYPE=mem
      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
    networks:
      - otelNetwork
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --no-verbose --tries=1 --timeout=5 http://localhost:9411/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3

  prometheus:
    container_name: prometheus
    hostname: prometheus
    restart: always
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yaml:/etc/prometheus/prometheus.yml
    networks:
      - otelNetwork
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --no-verbose --tries=1 --timeout=5 http://localhost:9090/-/healthy || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3

  grafana:
    container_name: grafana
    hostname: grafana
    restart: always
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      prometheus:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    networks:
      - otelNetwork
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --no-verbose --tries=1 --timeout=5 http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3

  otel-collector:
    container_name: otel-collector
    hostname: otel-collector
    restart: always
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    volumes:
      - ./docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    networks:
      - otelNetwork
    depends_on:
      prometheus:
        condition: service_healthy
      zipkin:
        condition: service_healthy
#    healthcheck:
#      test: ["CMD", "wget", "--spider", "--no-verbose", "--tries=1", "--timeout=5", "http://localhost:13133/health"]
#      interval: 10s
#      timeout: 10s
#      retries: 5

  api1:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: servico-a
    depends_on:
      - otel-collector
#      otel-collector:
#        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - otelNetwork

  api2:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: servico-b
    depends_on:
      - api1
    ports:
      - "8081:8081"
    networks:
      - otelNetwork

networks:
  otelNetwork:
    driver: bridge
